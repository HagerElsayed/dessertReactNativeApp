{"ast":null,"code":"var _interopRequireDefault = require(\"/Users/mac/Developer/ReactNative/dessertReactNativeApp/node_modules/@babel/runtime/helpers/interopRequireDefault.js\").default;\n\nvar _interopRequireWildcard = require(\"/Users/mac/Developer/ReactNative/dessertReactNativeApp/node_modules/@babel/runtime/helpers/interopRequireWildcard.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PanGestureHandler = exports.GestureState = exports.GestureHandlerRootView = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _View = _interopRequireDefault(require(\"react-native-web/dist/exports/View\"));\n\nvar Dummy = function Dummy(_ref) {\n  var children = _ref.children;\n  return React.createElement(React.Fragment, null, children);\n};\n\nvar PanGestureHandler = Dummy;\nexports.PanGestureHandler = PanGestureHandler;\nvar GestureHandlerRootView = _View.default;\nexports.GestureHandlerRootView = GestureHandlerRootView;\nvar GestureState = {\n  UNDETERMINED: 0,\n  FAILED: 1,\n  BEGAN: 2,\n  CANCELLED: 3,\n  ACTIVE: 4,\n  END: 5\n};\nexports.GestureState = GestureState;","map":{"version":3,"mappings":";;;;;;;;;AAAA;;;;AAIA,IAAMA,KAAU,GAAG,SAAbA,KAAa;EAAA,IAAGC,QAAH,QAAGA,QAAH;EAAA,OACjBC,0CAAGD,QAAH,CADiB;AAAnB;;AAIO,IAAME,iBAAiB,GAC5BH,KADK;;AAGA,IAAMI,sBAAsB,GAAGC,aAA/B;;AAEA,IAAMC,YAAY,GAAG;EAC1BC,YAAY,EAAE,CADY;EAE1BC,MAAM,EAAE,CAFkB;EAG1BC,KAAK,EAAE,CAHmB;EAI1BC,SAAS,EAAE,CAJe;EAK1BC,MAAM,EAAE,CALkB;EAM1BC,GAAG,EAAE;AANqB,CAArB","names":["Dummy","children","React","PanGestureHandler","GestureHandlerRootView","View","GestureState","UNDETERMINED","FAILED","BEGAN","CANCELLED","ACTIVE","END"],"sources":["GestureHandler.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View } from 'react-native';\nimport type { PanGestureHandlerProperties } from 'react-native-gesture-handler';\n\nconst Dummy: any = ({ children }: { children: React.ReactNode }) => (\n  <>{children}</>\n);\n\nexport const PanGestureHandler =\n  Dummy as React.ComponentType<PanGestureHandlerProperties>;\n\nexport const GestureHandlerRootView = View;\n\nexport const GestureState = {\n  UNDETERMINED: 0,\n  FAILED: 1,\n  BEGAN: 2,\n  CANCELLED: 3,\n  ACTIVE: 4,\n  END: 5,\n};\n\nexport type { PanGestureHandlerGestureEvent } from 'react-native-gesture-handler';\n"]},"metadata":{},"sourceType":"script"}