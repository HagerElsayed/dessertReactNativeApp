{"ast":null,"code":"var _interopRequireDefault = require(\"/Users/mac/Developer/ReactNative/dessertReactNativeApp/node_modules/@babel/runtime/helpers/interopRequireDefault.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"/Users/mac/Developer/ReactNative/dessertReactNativeApp/node_modules/@babel/runtime/helpers/esm/extends.js\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"/Users/mac/Developer/ReactNative/dessertReactNativeApp/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"/Users/mac/Developer/ReactNative/dessertReactNativeApp/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"/Users/mac/Developer/ReactNative/dessertReactNativeApp/node_modules/@babel/runtime/helpers/esm/createClass.js\"));\n\nvar _get2 = _interopRequireDefault(require(\"/Users/mac/Developer/ReactNative/dessertReactNativeApp/node_modules/@babel/runtime/helpers/esm/get.js\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"/Users/mac/Developer/ReactNative/dessertReactNativeApp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"/Users/mac/Developer/ReactNative/dessertReactNativeApp/node_modules/@babel/runtime/helpers/esm/inherits.js\"));\n\nvar _createSuper2 = _interopRequireDefault(require(\"/Users/mac/Developer/ReactNative/dessertReactNativeApp/node_modules/@babel/runtime/helpers/esm/createSuper.js\"));\n\nvar _GestureHandler2 = _interopRequireDefault(require(\"./GestureHandler\"));\n\nvar _excluded = [\"minPointers\", \"maxPointers\"];\n\nvar IndiscreteGestureHandler = function (_GestureHandler) {\n  (0, _inherits2.default)(IndiscreteGestureHandler, _GestureHandler);\n\n  var _super = (0, _createSuper2.default)(IndiscreteGestureHandler);\n\n  function IndiscreteGestureHandler() {\n    (0, _classCallCheck2.default)(this, IndiscreteGestureHandler);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(IndiscreteGestureHandler, [{\n    key: \"shouldEnableGestureOnSetup\",\n    get: function get() {\n      return false;\n    }\n  }, {\n    key: \"updateGestureConfig\",\n    value: function updateGestureConfig(_ref) {\n      var _ref$minPointers = _ref.minPointers,\n          minPointers = _ref$minPointers === void 0 ? 2 : _ref$minPointers,\n          _ref$maxPointers = _ref.maxPointers,\n          maxPointers = _ref$maxPointers === void 0 ? 2 : _ref$maxPointers,\n          props = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n      return (0, _get2.default)((0, _getPrototypeOf2.default)(IndiscreteGestureHandler.prototype), \"updateGestureConfig\", this).call(this, (0, _extends2.default)({\n        minPointers: minPointers,\n        maxPointers: maxPointers\n      }, props));\n    }\n  }, {\n    key: \"isGestureEnabledForEvent\",\n    value: function isGestureEnabledForEvent(_ref2, _recognizer, _ref3) {\n      var minPointers = _ref2.minPointers,\n          maxPointers = _ref2.maxPointers;\n      var pointerLength = _ref3.maxPointers;\n\n      if (pointerLength > maxPointers) {\n        return {\n          failed: true\n        };\n      }\n\n      var validPointerCount = pointerLength >= minPointers;\n      return {\n        success: validPointerCount\n      };\n    }\n  }]);\n  return IndiscreteGestureHandler;\n}(_GestureHandler2.default);\n\nvar _default = IndiscreteGestureHandler;\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;IAKeA,wB;;;;;;;;;;;;SACiB,eAAG;MAC/B,OAAO,KAAP;IACD;;;WAEDC,mCAAoE;MAAA,4BAA9CC,WAA8C;MAAA,IAA9CA,WAA8C,iCAAhC,CAAgC;MAAA,4BAA7BC,WAA6B;MAAA,IAA7BA,WAA6B,iCAAf,CAAe;MAAA,IAATC,KAAS;MAClE;QACEF,WAD+B,EAC/BA,WADF;QAEEC,WAF+B,EAE/BA;MAFF,GAGKC,KAHL;IAKD;;;WAEDC,yCAEEC,WAFFD,SAIE;MAAA,IAHEH,WAGF,SAHEA,WAGF;MAAA,IAHeC,WAGf,SAHeA,WAGf;MAAA,IADeI,aACf,SADEJ,WACF;;MACA,IAAII,aAAa,GAAGJ,WAApB,EAAiC;QAC/B,OAAO;UAAEK,MAAM,EAAE;QAAV,CAAP;MACD;;MACD,IAAMC,iBAAiB,GAAGF,aAAa,IAAIL,WAA3C;MACA,OAAO;QACLQ,OAAO,EAAED;MADJ,CAAP;IAGD;;;EAzB6CE,wB;;eA2BjCX,wB","names":["IndiscreteGestureHandler","updateGestureConfig","minPointers","maxPointers","props","isGestureEnabledForEvent","_recognizer","pointerLength","failed","validPointerCount","success","GestureHandler"],"sources":["IndiscreteGestureHandler.ts"],"sourcesContent":["import GestureHandler from './GestureHandler';\n\n/**\n * The base class for **Rotation** and **Pinch** gesture handlers.\n */\nabstract class IndiscreteGestureHandler extends GestureHandler {\n  get shouldEnableGestureOnSetup() {\n    return false;\n  }\n\n  updateGestureConfig({ minPointers = 2, maxPointers = 2, ...props }) {\n    return super.updateGestureConfig({\n      minPointers,\n      maxPointers,\n      ...props,\n    });\n  }\n\n  isGestureEnabledForEvent(\n    { minPointers, maxPointers }: any,\n    _recognizer: any,\n    { maxPointers: pointerLength }: any\n  ) {\n    if (pointerLength > maxPointers) {\n      return { failed: true };\n    }\n    const validPointerCount = pointerLength >= minPointers;\n    return {\n      success: validPointerCount,\n    };\n  }\n}\nexport default IndiscreteGestureHandler;\n"]},"metadata":{},"sourceType":"script"}