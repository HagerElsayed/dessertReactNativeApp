{"ast":null,"code":"var _interopRequireDefault = require(\"/Users/mac/Developer/ReactNative/dessertReactNativeApp/node_modules/@babel/runtime/helpers/interopRequireDefault.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TapGesture = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"/Users/mac/Developer/ReactNative/dessertReactNativeApp/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"/Users/mac/Developer/ReactNative/dessertReactNativeApp/node_modules/@babel/runtime/helpers/esm/createClass.js\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"/Users/mac/Developer/ReactNative/dessertReactNativeApp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"/Users/mac/Developer/ReactNative/dessertReactNativeApp/node_modules/@babel/runtime/helpers/esm/inherits.js\"));\n\nvar _createSuper2 = _interopRequireDefault(require(\"/Users/mac/Developer/ReactNative/dessertReactNativeApp/node_modules/@babel/runtime/helpers/esm/createSuper.js\"));\n\nvar _gesture = require(\"./gesture\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar TapGesture = function (_BaseGesture) {\n  (0, _inherits2.default)(TapGesture, _BaseGesture);\n\n  var _super = (0, _createSuper2.default)(TapGesture);\n\n  function TapGesture() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, TapGesture);\n    _this = _super.call(this);\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"config\", {});\n\n    _this.handlerName = 'TapGestureHandler';\n    return _this;\n  }\n\n  (0, _createClass2.default)(TapGesture, [{\n    key: \"minPointers\",\n    value: function minPointers(_minPointers) {\n      this.config.minPointers = _minPointers;\n      return this;\n    }\n  }, {\n    key: \"numberOfTaps\",\n    value: function numberOfTaps(count) {\n      this.config.numberOfTaps = count;\n      return this;\n    }\n  }, {\n    key: \"maxDistance\",\n    value: function maxDistance(maxDist) {\n      this.config.maxDist = maxDist;\n      return this;\n    }\n  }, {\n    key: \"maxDuration\",\n    value: function maxDuration(duration) {\n      this.config.maxDurationMs = duration;\n      return this;\n    }\n  }, {\n    key: \"maxDelay\",\n    value: function maxDelay(delay) {\n      this.config.maxDelayMs = delay;\n      return this;\n    }\n  }, {\n    key: \"maxDeltaX\",\n    value: function maxDeltaX(delta) {\n      this.config.maxDeltaX = delta;\n      return this;\n    }\n  }, {\n    key: \"maxDeltaY\",\n    value: function maxDeltaY(delta) {\n      this.config.maxDeltaY = delta;\n      return this;\n    }\n  }]);\n  return TapGesture;\n}(_gesture.BaseGesture);\n\nexports.TapGesture = TapGesture;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;IAMaA,U;;;;;EAGXC,sBAAc;IAAA;;IAAA;IACZ;;IADYC,uEAFwC,EAExC;;IAGZ,MAAKC,WAAL,GAAmB,mBAAnB;IAHY;EAIb;;;;WAEDC,qBAAYA,YAAZA,EAAiC;MAC/B,KAAKC,MAAL,CAAYD,WAAZ,GAA0BA,YAA1B;MACA,OAAO,IAAP;IACD;;;WAEDE,sBAAaC,KAAbD,EAA4B;MAC1B,KAAKD,MAAL,CAAYC,YAAZ,GAA2BC,KAA3B;MACA,OAAO,IAAP;IACD;;;WAEDC,qBAAYC,OAAZD,EAA6B;MAC3B,KAAKH,MAAL,CAAYI,OAAZ,GAAsBA,OAAtB;MACA,OAAO,IAAP;IACD;;;WAEDC,qBAAYC,QAAZD,EAA8B;MAC5B,KAAKL,MAAL,CAAYO,aAAZ,GAA4BD,QAA5B;MACA,OAAO,IAAP;IACD;;;WAEDE,kBAASC,KAATD,EAAwB;MACtB,KAAKR,MAAL,CAAYU,UAAZ,GAAyBD,KAAzB;MACA,OAAO,IAAP;IACD;;;WAEDE,mBAAUC,KAAVD,EAAyB;MACvB,KAAKX,MAAL,CAAYW,SAAZ,GAAwBC,KAAxB;MACA,OAAO,IAAP;IACD;;;WAEDC,mBAAUD,KAAVC,EAAyB;MACvB,KAAKb,MAAL,CAAYa,SAAZ,GAAwBD,KAAxB;MACA,OAAO,IAAP;IACD;;;EA1C6BE,oB","names":["TapGesture","constructor","_defineProperty","handlerName","minPointers","config","numberOfTaps","count","maxDistance","maxDist","maxDuration","duration","maxDurationMs","maxDelay","delay","maxDelayMs","maxDeltaX","delta","maxDeltaY","BaseGesture"],"sources":["tapGesture.ts"],"sourcesContent":["import { BaseGestureConfig, BaseGesture } from './gesture';\nimport {\n  TapGestureConfig,\n  TapGestureHandlerEventPayload,\n} from '../TapGestureHandler';\n\nexport class TapGesture extends BaseGesture<TapGestureHandlerEventPayload> {\n  public config: BaseGestureConfig & TapGestureConfig = {};\n\n  constructor() {\n    super();\n\n    this.handlerName = 'TapGestureHandler';\n  }\n\n  minPointers(minPointers: number) {\n    this.config.minPointers = minPointers;\n    return this;\n  }\n\n  numberOfTaps(count: number) {\n    this.config.numberOfTaps = count;\n    return this;\n  }\n\n  maxDistance(maxDist: number) {\n    this.config.maxDist = maxDist;\n    return this;\n  }\n\n  maxDuration(duration: number) {\n    this.config.maxDurationMs = duration;\n    return this;\n  }\n\n  maxDelay(delay: number) {\n    this.config.maxDelayMs = delay;\n    return this;\n  }\n\n  maxDeltaX(delta: number) {\n    this.config.maxDeltaX = delta;\n    return this;\n  }\n\n  maxDeltaY(delta: number) {\n    this.config.maxDeltaY = delta;\n    return this;\n  }\n}\n\nexport type TapGestureType = InstanceType<typeof TapGesture>;\n"]},"metadata":{},"sourceType":"script"}