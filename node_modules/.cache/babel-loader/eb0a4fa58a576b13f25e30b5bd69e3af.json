{"ast":null,"code":"var _interopRequireWildcard = require(\"/Users/mac/Developer/ReactNative/dessertReactNativeApp/node_modules/@babel/runtime/helpers/interopRequireWildcard.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useKeyedChildListeners;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nfunction useKeyedChildListeners() {\n  var _React$useRef = React.useRef({\n    getState: {},\n    beforeRemove: {}\n  }),\n      keyedListeners = _React$useRef.current;\n\n  var addKeyedListener = React.useCallback(function (type, key, listener) {\n    keyedListeners[type][key] = listener;\n    return function () {\n      keyedListeners[type][key] = undefined;\n    };\n  }, [keyedListeners]);\n  return {\n    keyedListeners: keyedListeners,\n    addKeyedListener: addKeyedListener\n  };\n}","map":{"version":3,"mappings":";;;;;;;AAAA;;AAOe,SAASA,sBAAT,GAAkC;EAC/C,oBAAoCC,KAAK,CAACC,MAAND,CAKjC;IACDE,QAAQ,EAAE,EADT;IAEDC,YAAY,EAAE;EAFb,CALiCH,CAApC;EAAA,IAAiBI,cAAjB,iBAAQC,OAAR;;EAUA,IAAMC,gBAAgB,GAAGN,KAAK,CAACO,WAANP,CACvB,UACEQ,IADF,EAEEC,GAFF,EAGEC,QAHF,EAIK;IACHN,cAAc,CAACI,IAAD,CAAdJ,CAAqBK,GAArBL,IAA4BM,QAA5BN;IAEA,OAAO,YAAM;MACXA,cAAc,CAACI,IAAD,CAAdJ,CAAqBK,GAArBL,IAA4BO,SAA5BP;IADF;EARqB,GAYvB,CAACA,cAAD,CAZuBJ,CAAzB;EAeA,OAAO;IACLI,cADK,EACLA,cADK;IAELE;EAFK,CAAP;AAID","names":["useKeyedChildListeners","React","useRef","getState","beforeRemove","keyedListeners","current","addKeyedListener","useCallback","type","key","listener","undefined"],"sources":["useKeyedChildListeners.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport type { KeyedListenerMap } from './NavigationBuilderContext';\n\n/**\n * Hook which lets child navigators add getters to be called for obtaining rehydrated state.\n */\nexport default function useKeyedChildListeners() {\n  const { current: keyedListeners } = React.useRef<{\n    [K in keyof KeyedListenerMap]: Record<\n      string,\n      KeyedListenerMap[K] | undefined\n    >;\n  }>({\n    getState: {},\n    beforeRemove: {},\n  });\n\n  const addKeyedListener = React.useCallback(\n    <T extends keyof KeyedListenerMap>(\n      type: T,\n      key: string,\n      listener: KeyedListenerMap[T]\n    ) => {\n      keyedListeners[type][key] = listener;\n\n      return () => {\n        keyedListeners[type][key] = undefined;\n      };\n    },\n    [keyedListeners]\n  );\n\n  return {\n    keyedListeners,\n    addKeyedListener,\n  };\n}\n"]},"metadata":{},"sourceType":"script"}