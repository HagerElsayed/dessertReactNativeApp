{"ast":null,"code":"var _interopRequireDefault = require(\"/Users/mac/Developer/ReactNative/dessertReactNativeApp/node_modules/@babel/runtime/helpers/interopRequireDefault.js\").default;\n\nvar _interopRequireWildcard = require(\"/Users/mac/Developer/ReactNative/dessertReactNativeApp/node_modules/@babel/runtime/helpers/interopRequireWildcard.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = PanResponderAdapter;\n\nvar _extends3 = _interopRequireDefault(require(\"/Users/mac/Developer/ReactNative/dessertReactNativeApp/node_modules/@babel/runtime/helpers/esm/extends.js\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"/Users/mac/Developer/ReactNative/dessertReactNativeApp/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _Animated = _interopRequireDefault(require(\"react-native-web/dist/exports/Animated\"));\n\nvar _PanResponder = _interopRequireDefault(require(\"react-native-web/dist/exports/PanResponder\"));\n\nvar _Keyboard = _interopRequireDefault(require(\"react-native-web/dist/exports/Keyboard\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\n\nvar _I18nManager = _interopRequireDefault(require(\"react-native-web/dist/exports/I18nManager\"));\n\nvar _View = _interopRequireDefault(require(\"react-native-web/dist/exports/View\"));\n\nvar _useAnimatedValue = _interopRequireDefault(require(\"./useAnimatedValue\"));\n\nvar _excluded = [\"timing\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar DEAD_ZONE = 12;\nvar DefaultTransitionSpec = {\n  timing: _Animated.default.spring,\n  stiffness: 1000,\n  damping: 500,\n  mass: 3,\n  overshootClamping: true\n};\n\nfunction PanResponderAdapter(_ref) {\n  var layout = _ref.layout,\n      _ref$keyboardDismissM = _ref.keyboardDismissMode,\n      keyboardDismissMode = _ref$keyboardDismissM === void 0 ? 'auto' : _ref$keyboardDismissM,\n      _ref$swipeEnabled = _ref.swipeEnabled,\n      swipeEnabled = _ref$swipeEnabled === void 0 ? true : _ref$swipeEnabled,\n      navigationState = _ref.navigationState,\n      onIndexChange = _ref.onIndexChange,\n      onSwipeStart = _ref.onSwipeStart,\n      onSwipeEnd = _ref.onSwipeEnd,\n      children = _ref.children,\n      style = _ref.style;\n  var routes = navigationState.routes,\n      index = navigationState.index;\n  var panX = (0, _useAnimatedValue.default)(0);\n  var listenersRef = React.useRef([]);\n  var navigationStateRef = React.useRef(navigationState);\n  var layoutRef = React.useRef(layout);\n  var onIndexChangeRef = React.useRef(onIndexChange);\n  var currentIndexRef = React.useRef(index);\n  var pendingIndexRef = React.useRef();\n  var swipeVelocityThreshold = 0.15;\n  var swipeDistanceThreshold = layout.width / 1.75;\n  var jumpToIndex = React.useCallback(function (index) {\n    var offset = -index * layoutRef.current.width;\n    var timing = DefaultTransitionSpec.timing,\n        transitionConfig = (0, _objectWithoutProperties2.default)(DefaultTransitionSpec, _excluded);\n\n    _Animated.default.parallel([timing(panX, (0, _extends3.default)({}, transitionConfig, {\n      toValue: offset,\n      useNativeDriver: false\n    }))]).start(function (_ref2) {\n      var finished = _ref2.finished;\n\n      if (finished) {\n        onIndexChangeRef.current(index);\n        pendingIndexRef.current = undefined;\n      }\n    });\n\n    pendingIndexRef.current = index;\n  }, [panX]);\n  React.useEffect(function () {\n    navigationStateRef.current = navigationState;\n    layoutRef.current = layout;\n    onIndexChangeRef.current = onIndexChange;\n  });\n  React.useEffect(function () {\n    var offset = -navigationStateRef.current.index * layout.width;\n    panX.setValue(offset);\n  }, [layout.width, panX]);\n  React.useEffect(function () {\n    if (keyboardDismissMode === 'auto') {\n      _Keyboard.default.dismiss();\n    }\n\n    if (layout.width && currentIndexRef.current !== index) {\n      currentIndexRef.current = index;\n      jumpToIndex(index);\n    }\n  }, [jumpToIndex, keyboardDismissMode, layout.width, index]);\n\n  var isMovingHorizontally = function isMovingHorizontally(_, gestureState) {\n    return Math.abs(gestureState.dx) > Math.abs(gestureState.dy * 2) && Math.abs(gestureState.vx) > Math.abs(gestureState.vy * 2);\n  };\n\n  var canMoveScreen = function canMoveScreen(event, gestureState) {\n    if (swipeEnabled === false) {\n      return false;\n    }\n\n    var diffX = _I18nManager.default.isRTL ? -gestureState.dx : gestureState.dx;\n    return isMovingHorizontally(event, gestureState) && (diffX >= DEAD_ZONE && currentIndexRef.current > 0 || diffX <= -DEAD_ZONE && currentIndexRef.current < routes.length - 1);\n  };\n\n  var startGesture = function startGesture() {\n    onSwipeStart === null || onSwipeStart === void 0 ? void 0 : onSwipeStart();\n\n    if (keyboardDismissMode === 'on-drag') {\n      _Keyboard.default.dismiss();\n    }\n\n    panX.stopAnimation();\n    panX.setOffset(panX._value);\n  };\n\n  var respondToGesture = function respondToGesture(_, gestureState) {\n    var diffX = _I18nManager.default.isRTL ? -gestureState.dx : gestureState.dx;\n\n    if (diffX > 0 && index <= 0 || diffX < 0 && index >= routes.length - 1) {\n      return;\n    }\n\n    if (layout.width) {\n      var position = (panX._offset + diffX) / -layout.width;\n      var next = position > index ? Math.ceil(position) : Math.floor(position);\n\n      if (next !== index) {\n        listenersRef.current.forEach(function (listener) {\n          return listener(next);\n        });\n      }\n    }\n\n    panX.setValue(diffX);\n  };\n\n  var finishGesture = function finishGesture(_, gestureState) {\n    panX.flattenOffset();\n    onSwipeEnd === null || onSwipeEnd === void 0 ? void 0 : onSwipeEnd();\n    var currentIndex = typeof pendingIndexRef.current === 'number' ? pendingIndexRef.current : currentIndexRef.current;\n    var nextIndex = currentIndex;\n\n    if (Math.abs(gestureState.dx) > Math.abs(gestureState.dy) && Math.abs(gestureState.vx) > Math.abs(gestureState.vy) && (Math.abs(gestureState.dx) > swipeDistanceThreshold || Math.abs(gestureState.vx) > swipeVelocityThreshold)) {\n      nextIndex = Math.round(Math.min(Math.max(0, _I18nManager.default.isRTL ? currentIndex + gestureState.dx / Math.abs(gestureState.dx) : currentIndex - gestureState.dx / Math.abs(gestureState.dx)), routes.length - 1));\n      currentIndexRef.current = nextIndex;\n    }\n\n    if (!isFinite(nextIndex)) {\n      nextIndex = currentIndex;\n    }\n\n    jumpToIndex(nextIndex);\n  };\n\n  var addEnterListener = React.useCallback(function (listener) {\n    listenersRef.current.push(listener);\n    return function () {\n      var index = listenersRef.current.indexOf(listener);\n\n      if (index > -1) {\n        listenersRef.current.splice(index, 1);\n      }\n    };\n  }, []);\n  var jumpTo = React.useCallback(function (key) {\n    var index = navigationStateRef.current.routes.findIndex(function (route) {\n      return route.key === key;\n    });\n    jumpToIndex(index);\n  }, [jumpToIndex]);\n\n  var panResponder = _PanResponder.default.create({\n    onMoveShouldSetPanResponder: canMoveScreen,\n    onMoveShouldSetPanResponderCapture: canMoveScreen,\n    onPanResponderGrant: startGesture,\n    onPanResponderMove: respondToGesture,\n    onPanResponderTerminate: finishGesture,\n    onPanResponderRelease: finishGesture,\n    onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {\n      return true;\n    }\n  });\n\n  var maxTranslate = layout.width * (routes.length - 1);\n\n  var translateX = _Animated.default.multiply(panX.interpolate({\n    inputRange: [-maxTranslate, 0],\n    outputRange: [-maxTranslate, 0],\n    extrapolate: 'clamp'\n  }), _I18nManager.default.isRTL ? -1 : 1);\n\n  return children({\n    position: layout.width ? _Animated.default.divide(panX, -layout.width) : new _Animated.default.Value(index),\n    addEnterListener: addEnterListener,\n    jumpTo: jumpTo,\n    render: function render(children) {\n      return React.createElement(_Animated.default.View, _extends({\n        style: [styles.sheet, layout.width ? {\n          width: routes.length * layout.width,\n          transform: [{\n            translateX: translateX\n          }]\n        } : null, style]\n      }, panResponder.panHandlers), React.Children.map(children, function (child, i) {\n        var route = routes[i];\n        var focused = i === index;\n        return React.createElement(_View.default, {\n          key: route.key,\n          style: layout.width ? {\n            width: layout.width\n          } : focused ? _StyleSheet.default.absoluteFill : null\n        }, focused || layout.width ? child : null);\n      }));\n    }\n  });\n}\n\nvar styles = _StyleSheet.default.create({\n  sheet: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'stretch'\n  }\n});","map":{"version":3,"mappings":"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","names":["DEAD_ZONE","DefaultTransitionSpec","timing","Animated","spring","stiffness","damping","mass","overshootClamping","PanResponderAdapter","layout","keyboardDismissMode","swipeEnabled","navigationState","onIndexChange","onSwipeStart","onSwipeEnd","children","style","routes","index","panX","useAnimatedValue","listenersRef","React","useRef","navigationStateRef","layoutRef","onIndexChangeRef","currentIndexRef","pendingIndexRef","swipeVelocityThreshold","swipeDistanceThreshold","width","jumpToIndex","useCallback","offset","current","transitionConfig","parallel","toValue","useNativeDriver","start","finished","undefined","useEffect","setValue","Keyboard","dismiss","isMovingHorizontally","_","gestureState","Math","abs","dx","dy","vx","vy","canMoveScreen","event","diffX","I18nManager","isRTL","length","startGesture","stopAnimation","setOffset","_value","respondToGesture","position","_offset","next","ceil","floor","forEach","listener","finishGesture","flattenOffset","currentIndex","nextIndex","round","min","max","isFinite","addEnterListener","push","indexOf","splice","jumpTo","key","findIndex","route","panResponder","PanResponder","create","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderGrant","onPanResponderMove","onPanResponderTerminate","onPanResponderRelease","onPanResponderTerminationRequest","maxTranslate","translateX","multiply","interpolate","inputRange","outputRange","extrapolate","divide","Value","render","View","styles","sheet","transform","panHandlers","Children","map","child","i","focused","StyleSheet","absoluteFill","flex","flexDirection","alignItems"],"sources":["PanResponderAdapter.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  PanResponder,\n  Keyboard,\n  StyleSheet,\n  GestureResponderEvent,\n  PanResponderGestureState,\n  I18nManager,\n  View,\n} from 'react-native';\nimport useAnimatedValue from './useAnimatedValue';\nimport type {\n  NavigationState,\n  Route,\n  Layout,\n  EventEmitterProps,\n  PagerProps,\n  Listener,\n} from './types';\n\ntype Props<T extends Route> = PagerProps & {\n  layout: Layout;\n  onIndexChange: (index: number) => void;\n  navigationState: NavigationState<T>;\n  children: (\n    props: EventEmitterProps & {\n      // Animated value which represents the state of current index\n      // It can include fractional digits as it represents the intermediate value\n      position: Animated.AnimatedInterpolation;\n      // Function to actually render the content of the pager\n      // The parent component takes care of rendering\n      render: (children: React.ReactNode) => React.ReactNode;\n      // Callback to call when switching the tab\n      // The tab switch animation is performed even if the index in state is unchanged\n      jumpTo: (key: string) => void;\n    }\n  ) => React.ReactElement;\n};\n\nconst DEAD_ZONE = 12;\n\nconst DefaultTransitionSpec = {\n  timing: Animated.spring,\n  stiffness: 1000,\n  damping: 500,\n  mass: 3,\n  overshootClamping: true,\n};\n\nexport default function PanResponderAdapter<T extends Route>({\n  layout,\n  keyboardDismissMode = 'auto',\n  swipeEnabled = true,\n  navigationState,\n  onIndexChange,\n  onSwipeStart,\n  onSwipeEnd,\n  children,\n  style,\n}: Props<T>) {\n  const { routes, index } = navigationState;\n\n  const panX = useAnimatedValue(0);\n\n  const listenersRef = React.useRef<Listener[]>([]);\n\n  const navigationStateRef = React.useRef(navigationState);\n  const layoutRef = React.useRef(layout);\n  const onIndexChangeRef = React.useRef(onIndexChange);\n\n  const currentIndexRef = React.useRef(index);\n  const pendingIndexRef = React.useRef<number>();\n\n  const swipeVelocityThreshold = 0.15;\n  const swipeDistanceThreshold = layout.width / 1.75;\n\n  const jumpToIndex = React.useCallback(\n    (index: number) => {\n      const offset = -index * layoutRef.current.width;\n\n      const { timing, ...transitionConfig } = DefaultTransitionSpec;\n\n      Animated.parallel([\n        timing(panX, {\n          ...transitionConfig,\n          toValue: offset,\n          useNativeDriver: false,\n        }),\n      ]).start(({ finished }) => {\n        if (finished) {\n          onIndexChangeRef.current(index);\n          pendingIndexRef.current = undefined;\n        }\n      });\n\n      pendingIndexRef.current = index;\n    },\n    [panX]\n  );\n\n  React.useEffect(() => {\n    navigationStateRef.current = navigationState;\n    layoutRef.current = layout;\n    onIndexChangeRef.current = onIndexChange;\n  });\n\n  React.useEffect(() => {\n    const offset = -navigationStateRef.current.index * layout.width;\n\n    panX.setValue(offset);\n  }, [layout.width, panX]);\n\n  React.useEffect(() => {\n    if (keyboardDismissMode === 'auto') {\n      Keyboard.dismiss();\n    }\n\n    if (layout.width && currentIndexRef.current !== index) {\n      currentIndexRef.current = index;\n      jumpToIndex(index);\n    }\n  }, [jumpToIndex, keyboardDismissMode, layout.width, index]);\n\n  const isMovingHorizontally = (\n    _: GestureResponderEvent,\n    gestureState: PanResponderGestureState\n  ) => {\n    return (\n      Math.abs(gestureState.dx) > Math.abs(gestureState.dy * 2) &&\n      Math.abs(gestureState.vx) > Math.abs(gestureState.vy * 2)\n    );\n  };\n\n  const canMoveScreen = (\n    event: GestureResponderEvent,\n    gestureState: PanResponderGestureState\n  ) => {\n    if (swipeEnabled === false) {\n      return false;\n    }\n\n    const diffX = I18nManager.isRTL ? -gestureState.dx : gestureState.dx;\n\n    return (\n      isMovingHorizontally(event, gestureState) &&\n      ((diffX >= DEAD_ZONE && currentIndexRef.current > 0) ||\n        (diffX <= -DEAD_ZONE && currentIndexRef.current < routes.length - 1))\n    );\n  };\n\n  const startGesture = () => {\n    onSwipeStart?.();\n\n    if (keyboardDismissMode === 'on-drag') {\n      Keyboard.dismiss();\n    }\n\n    panX.stopAnimation();\n    // @ts-expect-error: _value is private, but docs use it as well\n    panX.setOffset(panX._value);\n  };\n\n  const respondToGesture = (\n    _: GestureResponderEvent,\n    gestureState: PanResponderGestureState\n  ) => {\n    const diffX = I18nManager.isRTL ? -gestureState.dx : gestureState.dx;\n\n    if (\n      // swiping left\n      (diffX > 0 && index <= 0) ||\n      // swiping right\n      (diffX < 0 && index >= routes.length - 1)\n    ) {\n      return;\n    }\n\n    if (layout.width) {\n      // @ts-expect-error: _offset is private, but docs use it as well\n      const position = (panX._offset + diffX) / -layout.width;\n      const next =\n        position > index ? Math.ceil(position) : Math.floor(position);\n\n      if (next !== index) {\n        listenersRef.current.forEach((listener) => listener(next));\n      }\n    }\n\n    panX.setValue(diffX);\n  };\n\n  const finishGesture = (\n    _: GestureResponderEvent,\n    gestureState: PanResponderGestureState\n  ) => {\n    panX.flattenOffset();\n\n    onSwipeEnd?.();\n\n    const currentIndex =\n      typeof pendingIndexRef.current === 'number'\n        ? pendingIndexRef.current\n        : currentIndexRef.current;\n\n    let nextIndex = currentIndex;\n\n    if (\n      Math.abs(gestureState.dx) > Math.abs(gestureState.dy) &&\n      Math.abs(gestureState.vx) > Math.abs(gestureState.vy) &&\n      (Math.abs(gestureState.dx) > swipeDistanceThreshold ||\n        Math.abs(gestureState.vx) > swipeVelocityThreshold)\n    ) {\n      nextIndex = Math.round(\n        Math.min(\n          Math.max(\n            0,\n            I18nManager.isRTL\n              ? currentIndex + gestureState.dx / Math.abs(gestureState.dx)\n              : currentIndex - gestureState.dx / Math.abs(gestureState.dx)\n          ),\n          routes.length - 1\n        )\n      );\n\n      currentIndexRef.current = nextIndex;\n    }\n\n    if (!isFinite(nextIndex)) {\n      nextIndex = currentIndex;\n    }\n\n    jumpToIndex(nextIndex);\n  };\n\n  // TODO: use the listeners\n  const addEnterListener = React.useCallback((listener: Listener) => {\n    listenersRef.current.push(listener);\n\n    return () => {\n      const index = listenersRef.current.indexOf(listener);\n\n      if (index > -1) {\n        listenersRef.current.splice(index, 1);\n      }\n    };\n  }, []);\n\n  const jumpTo = React.useCallback(\n    (key: string) => {\n      const index = navigationStateRef.current.routes.findIndex(\n        (route: { key: string }) => route.key === key\n      );\n\n      jumpToIndex(index);\n    },\n    [jumpToIndex]\n  );\n\n  const panResponder = PanResponder.create({\n    onMoveShouldSetPanResponder: canMoveScreen,\n    onMoveShouldSetPanResponderCapture: canMoveScreen,\n    onPanResponderGrant: startGesture,\n    onPanResponderMove: respondToGesture,\n    onPanResponderTerminate: finishGesture,\n    onPanResponderRelease: finishGesture,\n    onPanResponderTerminationRequest: () => true,\n  });\n\n  const maxTranslate = layout.width * (routes.length - 1);\n  const translateX = Animated.multiply(\n    panX.interpolate({\n      inputRange: [-maxTranslate, 0],\n      outputRange: [-maxTranslate, 0],\n      extrapolate: 'clamp',\n    }),\n    I18nManager.isRTL ? -1 : 1\n  );\n\n  return children({\n    position: layout.width\n      ? Animated.divide(panX, -layout.width)\n      : new Animated.Value(index),\n    addEnterListener,\n    jumpTo,\n    render: (children) => (\n      <Animated.View\n        style={[\n          styles.sheet,\n          layout.width\n            ? {\n                width: routes.length * layout.width,\n                transform: [{ translateX }],\n              }\n            : null,\n          style,\n        ]}\n        {...panResponder.panHandlers}\n      >\n        {React.Children.map(children, (child, i) => {\n          const route = routes[i];\n          const focused = i === index;\n\n          return (\n            <View\n              key={route.key}\n              style={\n                layout.width\n                  ? { width: layout.width }\n                  : focused\n                  ? StyleSheet.absoluteFill\n                  : null\n              }\n            >\n              {focused || layout.width ? child : null}\n            </View>\n          );\n        })}\n      </Animated.View>\n    ),\n  });\n}\n\nconst styles = StyleSheet.create({\n  sheet: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'stretch',\n  },\n});\n"]},"metadata":{},"sourceType":"script"}