{"ast":null,"code":"var _interopRequireDefault = require(\"/Users/mac/Developer/ReactNative/dessertReactNativeApp/node_modules/@babel/runtime/helpers/interopRequireDefault.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _exportNames = {\n  enableScreens: true,\n  screensEnabled: true,\n  enableFreeze: true,\n  NativeScreen: true,\n  Screen: true,\n  ScreenContext: true,\n  ScreenContainer: true,\n  NativeScreenContainer: true,\n  NativeScreenNavigationContainer: true,\n  ScreenStack: true,\n  FullWindowOverlay: true,\n  ScreenStackHeaderBackButtonImage: true,\n  ScreenStackHeaderRightView: true,\n  ScreenStackHeaderLeftView: true,\n  ScreenStackHeaderCenterView: true,\n  ScreenStackHeaderSearchBarView: true,\n  ScreenStackHeaderConfig: true,\n  SearchBar: true,\n  ScreenStackHeaderSubview: true,\n  shouldUseActivityState: true,\n  useTransitionProgress: true,\n  isSearchBarAvailableForCurrentPlatform: true,\n  executeNativeBackPress: true\n};\nexports.SearchBar = exports.ScreenStackHeaderSubview = exports.ScreenStackHeaderSearchBarView = exports.ScreenStackHeaderRightView = exports.ScreenStackHeaderLeftView = exports.ScreenStackHeaderConfig = exports.ScreenStackHeaderCenterView = exports.ScreenStackHeaderBackButtonImage = exports.ScreenStack = exports.ScreenContext = exports.ScreenContainer = exports.Screen = exports.NativeScreenNavigationContainer = exports.NativeScreenContainer = exports.NativeScreen = exports.FullWindowOverlay = void 0;\nexports.enableFreeze = enableFreeze;\nexports.enableScreens = enableScreens;\nObject.defineProperty(exports, \"executeNativeBackPress\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.executeNativeBackPress;\n  }\n});\nObject.defineProperty(exports, \"isSearchBarAvailableForCurrentPlatform\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.isSearchBarAvailableForCurrentPlatform;\n  }\n});\nexports.screensEnabled = screensEnabled;\nexports.shouldUseActivityState = void 0;\nObject.defineProperty(exports, \"useTransitionProgress\", {\n  enumerable: true,\n  get: function get() {\n    return _useTransitionProgress.default;\n  }\n});\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"/Users/mac/Developer/ReactNative/dessertReactNativeApp/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"/Users/mac/Developer/ReactNative/dessertReactNativeApp/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"/Users/mac/Developer/ReactNative/dessertReactNativeApp/node_modules/@babel/runtime/helpers/esm/createClass.js\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"/Users/mac/Developer/ReactNative/dessertReactNativeApp/node_modules/@babel/runtime/helpers/esm/inherits.js\"));\n\nvar _createSuper2 = _interopRequireDefault(require(\"/Users/mac/Developer/ReactNative/dessertReactNativeApp/node_modules/@babel/runtime/helpers/esm/createSuper.js\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Animated = _interopRequireDefault(require(\"react-native-web/dist/exports/Animated\"));\n\nvar _View = _interopRequireDefault(require(\"react-native-web/dist/exports/View\"));\n\nvar _Image = _interopRequireDefault(require(\"react-native-web/dist/exports/Image\"));\n\nvar _types = require(\"./types\");\n\nObject.keys(_types).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _types[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _types[key];\n    }\n  });\n});\n\nvar _useTransitionProgress = _interopRequireDefault(require(\"./useTransitionProgress\"));\n\nvar _utils = require(\"./utils\");\n\nvar _excluded = [\"active\", \"activityState\", \"style\", \"enabled\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar ENABLE_SCREENS = true;\n\nfunction enableScreens() {\n  var shouldEnableScreens = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  ENABLE_SCREENS = shouldEnableScreens;\n}\n\nfunction screensEnabled() {\n  return ENABLE_SCREENS;\n}\n\nfunction enableFreeze() {\n  var shouldEnableReactFreeze = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n}\n\nvar NativeScreen = function (_React$Component) {\n  (0, _inherits2.default)(NativeScreen, _React$Component);\n\n  var _super = (0, _createSuper2.default)(NativeScreen);\n\n  function NativeScreen() {\n    (0, _classCallCheck2.default)(this, NativeScreen);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(NativeScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          active = _this$props.active,\n          activityState = _this$props.activityState,\n          style = _this$props.style,\n          _this$props$enabled = _this$props.enabled,\n          enabled = _this$props$enabled === void 0 ? ENABLE_SCREENS : _this$props$enabled,\n          rest = (0, _objectWithoutProperties2.default)(_this$props, _excluded);\n\n      if (enabled) {\n        if (active !== undefined && activityState === undefined) {\n          activityState = active !== 0 ? 2 : 0;\n        }\n\n        return _react.default.createElement(_View.default, _extends({\n          hidden: activityState === 0,\n          style: [style, {\n            display: activityState !== 0 ? 'flex' : 'none'\n          }]\n        }, rest));\n      }\n\n      return _react.default.createElement(_View.default, rest);\n    }\n  }]);\n  return NativeScreen;\n}(_react.default.Component);\n\nexports.NativeScreen = NativeScreen;\n\nvar Screen = _Animated.default.createAnimatedComponent(NativeScreen);\n\nexports.Screen = Screen;\n\nvar ScreenContext = _react.default.createContext(Screen);\n\nexports.ScreenContext = ScreenContext;\nvar ScreenContainer = _View.default;\nexports.ScreenContainer = ScreenContainer;\nvar NativeScreenContainer = _View.default;\nexports.NativeScreenContainer = NativeScreenContainer;\nvar NativeScreenNavigationContainer = _View.default;\nexports.NativeScreenNavigationContainer = NativeScreenNavigationContainer;\nvar ScreenStack = _View.default;\nexports.ScreenStack = ScreenStack;\nvar FullWindowOverlay = _View.default;\nexports.FullWindowOverlay = FullWindowOverlay;\n\nvar ScreenStackHeaderBackButtonImage = function ScreenStackHeaderBackButtonImage(props) {\n  return _react.default.createElement(_View.default, null, _react.default.createElement(_Image.default, _extends({\n    resizeMode: \"center\",\n    fadeDuration: 0\n  }, props)));\n};\n\nexports.ScreenStackHeaderBackButtonImage = ScreenStackHeaderBackButtonImage;\n\nvar ScreenStackHeaderRightView = function ScreenStackHeaderRightView(props) {\n  return _react.default.createElement(_View.default, props);\n};\n\nexports.ScreenStackHeaderRightView = ScreenStackHeaderRightView;\n\nvar ScreenStackHeaderLeftView = function ScreenStackHeaderLeftView(props) {\n  return _react.default.createElement(_View.default, props);\n};\n\nexports.ScreenStackHeaderLeftView = ScreenStackHeaderLeftView;\n\nvar ScreenStackHeaderCenterView = function ScreenStackHeaderCenterView(props) {\n  return _react.default.createElement(_View.default, props);\n};\n\nexports.ScreenStackHeaderCenterView = ScreenStackHeaderCenterView;\n\nvar ScreenStackHeaderSearchBarView = function ScreenStackHeaderSearchBarView(props) {\n  return _react.default.createElement(_View.default, props);\n};\n\nexports.ScreenStackHeaderSearchBarView = ScreenStackHeaderSearchBarView;\nvar ScreenStackHeaderConfig = _View.default;\nexports.ScreenStackHeaderConfig = ScreenStackHeaderConfig;\nvar SearchBar = _View.default;\nexports.SearchBar = SearchBar;\nvar ScreenStackHeaderSubview = _View.default;\nexports.ScreenStackHeaderSubview = ScreenStackHeaderSubview;\nvar shouldUseActivityState = true;\nexports.shouldUseActivityState = shouldUseActivityState;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;AAWA;;AAAA;EAAA;EAAA;EAAA;EAAA;IAAA;IAAA;MAAA;IAAA;EAAA;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;AAKA,IAAIA,cAAc,GAAG,IAArB;;AAEO,SAASC,aAAT,GAAyD;EAAA,IAAlCC,mBAAkC,uEAAZ,IAAY;EAC9DF,cAAc,GAAGE,mBAAjBF;AACD;;AAEM,SAASG,cAAT,GAAmC;EACxC,OAAOH,cAAP;;;AAKK,SAASI,YAAT,GAA4D;EAAA,IAAtCC,uBAAsC,uEAAZ,IAAY;AAElE;;IAEYC,Y;;;;;;;;;;;;WACXC,kBAAsB;MACpB,kBAMI,KAAKC,KANT;MAAA,IACEC,MADF,eACEA,MADF;MAAA,IAEEC,aAFF,eAEEA,aAFF;MAAA,IAGEC,KAHF,eAGEA,KAHF;MAAA,sCAIEC,OAJF;MAAA,IAIEA,OAJF,oCAIYZ,cAJZ;MAAA,IAKKa,IALL;;MAQA,IAAID,OAAJ,EAAa;QACX,IAAIH,MAAM,KAAKK,SAAXL,IAAwBC,aAAa,KAAKI,SAA9C,EAAyD;UACvDJ,aAAa,GAAGD,MAAM,KAAK,CAAXA,GAAe,CAAfA,GAAmB,CAAnCC;QACD;;QACD,OACEK,6BAACC,aAAD;UAEEC,MAAM,EAAEP,aAAa,KAAK,CAF5B;UAGEC,KAAK,EAAE,CAACA,KAAD,EAAQ;YAAEO,OAAO,EAAER,aAAa,KAAK,CAAlBA,GAAsB,MAAtBA,GAA+B;UAA1C,CAAR;QAHT,GAIMG,IAJN,EADF;MAQD;;MAED,OAAOE,6BAACC,aAAD,EAAUH,IAAV,CAAP;IACD;;;EAzB+BE,eAAMI,S;;;;AA4BjC,IAAMC,MAAM,GAAGC,kBAASC,uBAATD,CAAiCf,YAAjCe,CAAf;;;;AAEA,IAAME,aAAa,GAAGR,eAAMS,aAANT,CAAoBK,MAApBL,CAAtB;;;AAEA,IAAMU,eAA0D,GAAGT,aAAnE;;AAEA,IAAMU,qBAAgE,GAAGV,aAAzE;;AAEA,IAAMW,+BAA0E,GAAGX,aAAnF;;AAEA,IAAMY,WAAkD,GAAGZ,aAA3D;;AAEA,IAAMa,iBAAiB,GAAGb,aAA1B;;;AAEA,IAAMc,gCAAgC,GAC3CtB,SADWsB,gCACXtB,MAD8C;EAAA,OAG9CO,6BAACC,aAAD,QACED,6BAACgB,cAAD;IAAOC,UAAU,EAAC,QAAlB;IAA2BC,YAAY,EAAE;EAAzC,GAAgDzB,KAAhD,EADF,CAH8C;AAAA,CAAzC;;;;AAQA,IAAM0B,0BAA0B,GACrC1B,SADW0B,0BACX1B,MADwC;EAAA,OAExBO,6BAACC,aAAD,EAAUR,KAAV,CAFwB;AAAA,CAAnC;;;;AAIA,IAAM2B,yBAAyB,GACpC3B,SADW2B,yBACX3B,MADuC;EAAA,OAEvBO,6BAACC,aAAD,EAAUR,KAAV,CAFuB;AAAA,CAAlC;;;;AAIA,IAAM4B,2BAA2B,GACtC5B,SADW4B,2BACX5B,MADyC;EAAA,OAEzBO,6BAACC,aAAD,EAAUR,KAAV,CAFyB;AAAA,CAApC;;;;AAIA,IAAM6B,8BAA8B,GACzC7B,SADW6B,8BACX7B,MAD4C;EAAA,OAE5BO,6BAACC,aAAD,EAAUR,KAAV,CAF4B;AAAA,CAAvC;;;AAIA,IAAM8B,uBAA0E,GAAGtB,aAAnF;;AAGA,IAAMuB,SAA8C,GAAGvB,aAAvD;;AAEA,IAAMwB,wBAEX,GAAGxB,aAFE;;AAIA,IAAMyB,sBAAsB,GAAG,IAA/B","names":["ENABLE_SCREENS","enableScreens","shouldEnableScreens","screensEnabled","enableFreeze","shouldEnableReactFreeze","NativeScreen","render","props","active","activityState","style","enabled","rest","undefined","React","View","hidden","display","Component","Screen","Animated","createAnimatedComponent","ScreenContext","createContext","ScreenContainer","NativeScreenContainer","NativeScreenNavigationContainer","ScreenStack","FullWindowOverlay","ScreenStackHeaderBackButtonImage","Image","resizeMode","fadeDuration","ScreenStackHeaderRightView","ScreenStackHeaderLeftView","ScreenStackHeaderCenterView","ScreenStackHeaderSearchBarView","ScreenStackHeaderConfig","SearchBar","ScreenStackHeaderSubview","shouldUseActivityState"],"sources":["index.tsx"],"sourcesContent":["import React from 'react';\nimport { Animated, View, ViewProps, ImageProps, Image } from 'react-native';\nimport {\n  ScreenProps,\n  ScreenContainerProps,\n  ScreenStackProps,\n  ScreenStackHeaderConfigProps,\n  HeaderSubviewTypes,\n  SearchBarProps,\n} from './types';\n\nexport * from './types';\nexport { default as useTransitionProgress } from './useTransitionProgress';\nexport {\n  isSearchBarAvailableForCurrentPlatform,\n  executeNativeBackPress,\n} from './utils';\n\nlet ENABLE_SCREENS = true;\n\nexport function enableScreens(shouldEnableScreens = true): void {\n  ENABLE_SCREENS = shouldEnableScreens;\n}\n\nexport function screensEnabled(): boolean {\n  return ENABLE_SCREENS;\n}\n\n// @ts-ignore function stub, freezing logic is located in index.native.tsx\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function enableFreeze(shouldEnableReactFreeze = true): void {\n  // noop\n}\n\nexport class NativeScreen extends React.Component<ScreenProps> {\n  render(): JSX.Element {\n    let {\n      active,\n      activityState,\n      style,\n      enabled = ENABLE_SCREENS,\n      ...rest\n    } = this.props;\n\n    if (enabled) {\n      if (active !== undefined && activityState === undefined) {\n        activityState = active !== 0 ? 2 : 0; // change taken from index.native.tsx\n      }\n      return (\n        <View\n          // @ts-expect-error: hidden exists on web, but not in React Native\n          hidden={activityState === 0}\n          style={[style, { display: activityState !== 0 ? 'flex' : 'none' }]}\n          {...rest}\n        />\n      );\n    }\n\n    return <View {...rest} />;\n  }\n}\n\nexport const Screen = Animated.createAnimatedComponent(NativeScreen);\n\nexport const ScreenContext = React.createContext(Screen);\n\nexport const ScreenContainer: React.ComponentType<ScreenContainerProps> = View;\n\nexport const NativeScreenContainer: React.ComponentType<ScreenContainerProps> = View;\n\nexport const NativeScreenNavigationContainer: React.ComponentType<ScreenContainerProps> = View;\n\nexport const ScreenStack: React.ComponentType<ScreenStackProps> = View;\n\nexport const FullWindowOverlay = View;\n\nexport const ScreenStackHeaderBackButtonImage = (\n  props: ImageProps\n): JSX.Element => (\n  <View>\n    <Image resizeMode=\"center\" fadeDuration={0} {...props} />\n  </View>\n);\n\nexport const ScreenStackHeaderRightView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => <View {...props} />;\n\nexport const ScreenStackHeaderLeftView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => <View {...props} />;\n\nexport const ScreenStackHeaderCenterView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => <View {...props} />;\n\nexport const ScreenStackHeaderSearchBarView = (\n  props: React.PropsWithChildren<SearchBarProps>\n): JSX.Element => <View {...props} />;\n\nexport const ScreenStackHeaderConfig: React.ComponentType<ScreenStackHeaderConfigProps> = View;\n\n// @ts-expect-error: search bar props have no common props with View\nexport const SearchBar: React.ComponentType<SearchBarProps> = View;\n\nexport const ScreenStackHeaderSubview: React.ComponentType<React.PropsWithChildren<\n  ViewProps & { type?: HeaderSubviewTypes }\n>> = View;\n\nexport const shouldUseActivityState = true;\n"]},"metadata":{},"sourceType":"script"}